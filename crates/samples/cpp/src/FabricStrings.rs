// Bindings generated by `windows-bindgen` 0.62.1

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]

pub mod Microsoft {
    pub mod ServiceFabric {
        pub mod FabricStrings {
            windows_core::imp::define_interface!(
                IFabricStringsApiTable,
                IFabricStringsApiTable_Vtbl,
                0x1125f6a8_c6a6_433e_bf29_75d148fb0faa
            );
            windows_core::imp::interface_hierarchy!(IFabricStringsApiTable, windows_core::IUnknown);
            impl IFabricStringsApiTable {
                pub unsafe fn BeginConcatStrings < P0, P1, P3, > ( & self , str1 : P0 , str2 : P1 , timeoutmilliseconds : u32 , callback : P3 , ) -> windows_core::Result < mssf_com::Microsoft::ServiceFabric::FabricCommon:: IFabricAsyncOperationContext > where P0 :windows_core::Param < IFabricStringsBytes > , P1 :windows_core::Param < IFabricStringsBytes > , P3 :windows_core::Param < mssf_com::Microsoft::ServiceFabric::FabricCommon:: IFabricAsyncOperationCallback > ,{
                    unsafe {
                        let mut result__ = core::mem::zeroed();
                        (windows_core::Interface::vtable(self).BeginConcatStrings)(
                            windows_core::Interface::as_raw(self),
                            str1.param().abi(),
                            str2.param().abi(),
                            timeoutmilliseconds,
                            callback.param().abi(),
                            &mut result__,
                        )
                        .and_then(|| windows_core::Type::from_abi(result__))
                    }
                }                pub unsafe fn EndConcatStrings < P0, > ( & self , context : P0 , ) -> windows_core::Result < IFabricStringsBytes > where P0 :windows_core::Param < mssf_com::Microsoft::ServiceFabric::FabricCommon:: IFabricAsyncOperationContext > ,{
                    unsafe {
                        let mut result__ = core::mem::zeroed();
                        (windows_core::Interface::vtable(self).EndConcatStrings)(
                            windows_core::Interface::as_raw(self),
                            context.param().abi(),
                            &mut result__,
                        )
                        .and_then(|| windows_core::Type::from_abi(result__))
                    }
                }
            }
            #[repr(C)]
            #[doc(hidden)]
            pub struct IFabricStringsApiTable_Vtbl {
                pub base__: windows_core::IUnknown_Vtbl,
                pub BeginConcatStrings: unsafe extern "system" fn(
                    *mut core::ffi::c_void,
                    *mut core::ffi::c_void,
                    *mut core::ffi::c_void,
                    u32,
                    *mut core::ffi::c_void,
                    *mut *mut core::ffi::c_void,
                )
                    -> windows_core::HRESULT,
                pub EndConcatStrings: unsafe extern "system" fn(
                    *mut core::ffi::c_void,
                    *mut core::ffi::c_void,
                    *mut *mut core::ffi::c_void,
                )
                    -> windows_core::HRESULT,
            }
            unsafe impl Send for IFabricStringsApiTable {}
            unsafe impl Sync for IFabricStringsApiTable {}
            pub trait IFabricStringsApiTable_Impl: windows_core::IUnknownImpl {
                fn BeginConcatStrings(
                    &self,
                    str1: windows_core::Ref<'_, IFabricStringsBytes>,
                    str2: windows_core::Ref<'_, IFabricStringsBytes>,
                    timeoutmilliseconds: u32,
                    callback :windows_core::Ref < '_ , mssf_com::Microsoft::ServiceFabric::FabricCommon:: IFabricAsyncOperationCallback >,
                ) -> windows_core::Result<
                    mssf_com::Microsoft::ServiceFabric::FabricCommon::IFabricAsyncOperationContext,
                >;
                fn EndConcatStrings(
                    &self,
                    context :windows_core::Ref < '_ , mssf_com::Microsoft::ServiceFabric::FabricCommon:: IFabricAsyncOperationContext >,
                ) -> windows_core::Result<IFabricStringsBytes>;
            }
            impl IFabricStringsApiTable_Vtbl {
                pub const fn new<Identity: IFabricStringsApiTable_Impl, const OFFSET: isize>(
                ) -> Self {
                    unsafe extern "system" fn BeginConcatStrings<
                        Identity: IFabricStringsApiTable_Impl,
                        const OFFSET: isize,
                    >(
                        this: *mut core::ffi::c_void,
                        str1: *mut core::ffi::c_void,
                        str2: *mut core::ffi::c_void,
                        timeoutmilliseconds: u32,
                        callback: *mut core::ffi::c_void,
                        context: *mut *mut core::ffi::c_void,
                    ) -> windows_core::HRESULT {
                        unsafe {
                            let this: &Identity =
                                &*((this as *const *const ()).offset(OFFSET) as *const Identity);
                            match IFabricStringsApiTable_Impl::BeginConcatStrings(
                                this,
                                core::mem::transmute_copy(&str1),
                                core::mem::transmute_copy(&str2),
                                core::mem::transmute_copy(&timeoutmilliseconds),
                                core::mem::transmute_copy(&callback),
                            ) {
                                Ok(ok__) => {
                                    context.write(core::mem::transmute(ok__));
                                    windows_core::HRESULT(0)
                                }
                                Err(err) => err.into(),
                            }
                        }
                    }
                    unsafe extern "system" fn EndConcatStrings<
                        Identity: IFabricStringsApiTable_Impl,
                        const OFFSET: isize,
                    >(
                        this: *mut core::ffi::c_void,
                        context: *mut core::ffi::c_void,
                        str: *mut *mut core::ffi::c_void,
                    ) -> windows_core::HRESULT {
                        unsafe {
                            let this: &Identity =
                                &*((this as *const *const ()).offset(OFFSET) as *const Identity);
                            match IFabricStringsApiTable_Impl::EndConcatStrings(
                                this,
                                core::mem::transmute_copy(&context),
                            ) {
                                Ok(ok__) => {
                                    str.write(core::mem::transmute(ok__));
                                    windows_core::HRESULT(0)
                                }
                                Err(err) => err.into(),
                            }
                        }
                    }
                    Self {
                        base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                        BeginConcatStrings: BeginConcatStrings::<Identity, OFFSET>,
                        EndConcatStrings: EndConcatStrings::<Identity, OFFSET>,
                    }
                }
                pub fn matches(iid: &windows_core::GUID) -> bool {
                    iid == &<IFabricStringsApiTable as windows_core::Interface>::IID
                }
            }
            impl windows_core::RuntimeName for IFabricStringsApiTable {}
            windows_core::imp::define_interface!(
                IFabricStringsBytes,
                IFabricStringsBytes_Vtbl,
                0x60cd7314_b572_4094_b05f_b65815a820b5
            );
            windows_core::imp::interface_hierarchy!(IFabricStringsBytes, windows_core::IUnknown);
            impl IFabricStringsBytes {
                pub unsafe fn GetBytes(&self, buffer: *mut *mut u8, buffersize: *mut u32) {
                    unsafe {
                        (windows_core::Interface::vtable(self).GetBytes)(
                            windows_core::Interface::as_raw(self),
                            buffer as _,
                            buffersize as _,
                        )
                    }
                }
            }
            #[repr(C)]
            #[doc(hidden)]
            pub struct IFabricStringsBytes_Vtbl {
                pub base__: windows_core::IUnknown_Vtbl,
                pub GetBytes:
                    unsafe extern "system" fn(*mut core::ffi::c_void, *mut *mut u8, *mut u32),
            }
            unsafe impl Send for IFabricStringsBytes {}
            unsafe impl Sync for IFabricStringsBytes {}
            pub trait IFabricStringsBytes_Impl: windows_core::IUnknownImpl {
                fn GetBytes(&self, buffer: *mut *mut u8, buffersize: *mut u32);
            }
            impl IFabricStringsBytes_Vtbl {
                pub const fn new<Identity: IFabricStringsBytes_Impl, const OFFSET: isize>() -> Self
                {
                    unsafe extern "system" fn GetBytes<
                        Identity: IFabricStringsBytes_Impl,
                        const OFFSET: isize,
                    >(
                        this: *mut core::ffi::c_void,
                        buffer: *mut *mut u8,
                        buffersize: *mut u32,
                    ) {
                        unsafe {
                            let this: &Identity =
                                &*((this as *const *const ()).offset(OFFSET) as *const Identity);
                            IFabricStringsBytes_Impl::GetBytes(
                                this,
                                core::mem::transmute_copy(&buffer),
                                core::mem::transmute_copy(&buffersize),
                            )
                        }
                    }
                    Self {
                        base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                        GetBytes: GetBytes::<Identity, OFFSET>,
                    }
                }
                pub fn matches(iid: &windows_core::GUID) -> bool {
                    iid == &<IFabricStringsBytes as windows_core::Interface>::IID
                }
            }
            impl windows_core::RuntimeName for IFabricStringsBytes {}
        }
    }
}
