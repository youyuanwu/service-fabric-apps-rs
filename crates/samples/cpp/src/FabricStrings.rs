// Bindings generated by `windows-bindgen` 0.57.0

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]
windows_core::imp::define_interface!(
    IFabricStringsApiTable,
    IFabricStringsApiTable_Vtbl,
    0x1125f6a8_c6a6_433e_bf29_75d148fb0faa
);
impl core::ops::Deref for IFabricStringsApiTable {
    type Target = windows_core::IUnknown;
    fn deref(&self) -> &Self::Target {
        unsafe { core::mem::transmute(self) }
    }
}
windows_core::imp::interface_hierarchy!(IFabricStringsApiTable, windows_core::IUnknown);
impl IFabricStringsApiTable {
    pub unsafe fn BeginConcatStrings<P0, P1, P2>(
        &self,
        str1: P0,
        str2: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> windows_core::Result<super::FabricCommon::IFabricAsyncOperationContext>
    where
        P0: windows_core::Param<IFabricStringsBytes>,
        P1: windows_core::Param<IFabricStringsBytes>,
        P2: windows_core::Param<super::FabricCommon::IFabricAsyncOperationCallback>,
    {
        let mut result__ = core::mem::zeroed();
        (windows_core::Interface::vtable(self).BeginConcatStrings)(
            windows_core::Interface::as_raw(self),
            str1.param().abi(),
            str2.param().abi(),
            timeoutmilliseconds,
            callback.param().abi(),
            &mut result__,
        )
        .and_then(|| windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndConcatStrings<P0>(
        &self,
        context: P0,
    ) -> windows_core::Result<IFabricStringsBytes>
    where
        P0: windows_core::Param<super::FabricCommon::IFabricAsyncOperationContext>,
    {
        let mut result__ = core::mem::zeroed();
        (windows_core::Interface::vtable(self).EndConcatStrings)(
            windows_core::Interface::as_raw(self),
            context.param().abi(),
            &mut result__,
        )
        .and_then(|| windows_core::Type::from_abi(result__))
    }
}
unsafe impl Send for IFabricStringsApiTable {}
unsafe impl Sync for IFabricStringsApiTable {}
#[repr(C)]
pub struct IFabricStringsApiTable_Vtbl {
    pub base__: windows_core::IUnknown_Vtbl,
    pub BeginConcatStrings: unsafe extern "system" fn(
        *mut core::ffi::c_void,
        *mut core::ffi::c_void,
        *mut core::ffi::c_void,
        u32,
        *mut core::ffi::c_void,
        *mut *mut core::ffi::c_void,
    ) -> windows_core::HRESULT,
    pub EndConcatStrings: unsafe extern "system" fn(
        *mut core::ffi::c_void,
        *mut core::ffi::c_void,
        *mut *mut core::ffi::c_void,
    ) -> windows_core::HRESULT,
}
windows_core::imp::define_interface!(
    IFabricStringsBytes,
    IFabricStringsBytes_Vtbl,
    0x60cd7314_b572_4094_b05f_b65815a820b5
);
impl core::ops::Deref for IFabricStringsBytes {
    type Target = windows_core::IUnknown;
    fn deref(&self) -> &Self::Target {
        unsafe { core::mem::transmute(self) }
    }
}
windows_core::imp::interface_hierarchy!(IFabricStringsBytes, windows_core::IUnknown);
impl IFabricStringsBytes {
    pub unsafe fn GetBytes(&self, buffer: *mut *mut u8, buffersize: *mut u32) {
        (windows_core::Interface::vtable(self).GetBytes)(
            windows_core::Interface::as_raw(self),
            buffer,
            buffersize,
        )
    }
}
unsafe impl Send for IFabricStringsBytes {}
unsafe impl Sync for IFabricStringsBytes {}
#[repr(C)]
pub struct IFabricStringsBytes_Vtbl {
    pub base__: windows_core::IUnknown_Vtbl,
    pub GetBytes: unsafe extern "system" fn(*mut core::ffi::c_void, *mut *mut u8, *mut u32),
}
pub trait IFabricStringsApiTable_Impl: Sized {
    fn BeginConcatStrings(
        &self,
        str1: Option<&IFabricStringsBytes>,
        str2: Option<&IFabricStringsBytes>,
        timeoutmilliseconds: u32,
        callback: Option<&super::FabricCommon::IFabricAsyncOperationCallback>,
    ) -> windows_core::Result<super::FabricCommon::IFabricAsyncOperationContext>;
    fn EndConcatStrings(
        &self,
        context: Option<&super::FabricCommon::IFabricAsyncOperationContext>,
    ) -> windows_core::Result<IFabricStringsBytes>;
}
impl windows_core::RuntimeName for IFabricStringsApiTable {}
impl IFabricStringsApiTable_Vtbl {
    pub const fn new<
        Identity: windows_core::IUnknownImpl<Impl = Impl>,
        Impl: IFabricStringsApiTable_Impl,
        const OFFSET: isize,
    >() -> IFabricStringsApiTable_Vtbl {
        unsafe extern "system" fn BeginConcatStrings<
            Identity: windows_core::IUnknownImpl<Impl = Impl>,
            Impl: IFabricStringsApiTable_Impl,
            const OFFSET: isize,
        >(
            this: *mut core::ffi::c_void,
            str1: *mut core::ffi::c_void,
            str2: *mut core::ffi::c_void,
            timeoutmilliseconds: u32,
            callback: *mut core::ffi::c_void,
            context: *mut *mut core::ffi::c_void,
        ) -> windows_core::HRESULT {
            let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
            let this = (*this).get_impl();
            match IFabricStringsApiTable_Impl::BeginConcatStrings(
                this,
                windows_core::from_raw_borrowed(&str1),
                windows_core::from_raw_borrowed(&str2),
                core::mem::transmute_copy(&timeoutmilliseconds),
                windows_core::from_raw_borrowed(&callback),
            ) {
                Ok(ok__) => {
                    core::ptr::write(context, core::mem::transmute(ok__));
                    windows_core::HRESULT(0)
                }
                Err(err) => err.into(),
            }
        }
        unsafe extern "system" fn EndConcatStrings<
            Identity: windows_core::IUnknownImpl<Impl = Impl>,
            Impl: IFabricStringsApiTable_Impl,
            const OFFSET: isize,
        >(
            this: *mut core::ffi::c_void,
            context: *mut core::ffi::c_void,
            str: *mut *mut core::ffi::c_void,
        ) -> windows_core::HRESULT {
            let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
            let this = (*this).get_impl();
            match IFabricStringsApiTable_Impl::EndConcatStrings(
                this,
                windows_core::from_raw_borrowed(&context),
            ) {
                Ok(ok__) => {
                    core::ptr::write(str, core::mem::transmute(ok__));
                    windows_core::HRESULT(0)
                }
                Err(err) => err.into(),
            }
        }
        Self {
            base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
            BeginConcatStrings: BeginConcatStrings::<Identity, Impl, OFFSET>,
            EndConcatStrings: EndConcatStrings::<Identity, Impl, OFFSET>,
        }
    }
    pub fn matches(iid: &windows_core::GUID) -> bool {
        iid == &<IFabricStringsApiTable as windows_core::Interface>::IID
    }
}
pub trait IFabricStringsBytes_Impl: Sized {
    fn GetBytes(&self, buffer: *mut *mut u8, buffersize: *mut u32);
}
impl windows_core::RuntimeName for IFabricStringsBytes {}
impl IFabricStringsBytes_Vtbl {
    pub const fn new<
        Identity: windows_core::IUnknownImpl<Impl = Impl>,
        Impl: IFabricStringsBytes_Impl,
        const OFFSET: isize,
    >() -> IFabricStringsBytes_Vtbl {
        unsafe extern "system" fn GetBytes<
            Identity: windows_core::IUnknownImpl<Impl = Impl>,
            Impl: IFabricStringsBytes_Impl,
            const OFFSET: isize,
        >(
            this: *mut core::ffi::c_void,
            buffer: *mut *mut u8,
            buffersize: *mut u32,
        ) {
            let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
            let this = (*this).get_impl();
            IFabricStringsBytes_Impl::GetBytes(
                this,
                core::mem::transmute_copy(&buffer),
                core::mem::transmute_copy(&buffersize),
            )
        }
        Self {
            base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
            GetBytes: GetBytes::<Identity, Impl, OFFSET>,
        }
    }
    pub fn matches(iid: &windows_core::GUID) -> bool {
        iid == &<IFabricStringsBytes as windows_core::Interface>::IID
    }
}
